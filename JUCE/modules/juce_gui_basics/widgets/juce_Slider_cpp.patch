--- juce_Slider.cpp	2015-07-23 21:11:23.000000000 +0200
+++ /Users/matthias/ambix/JUCE/modules/juce_gui_basics/widgets/juce_Slider.cpp	2015-07-25 09:24:42.000000000 +0200
@@ -54,6 +54,7 @@
         menuEnabled (false),
         useDragEvents (false),
         scrollWheelEnabled (true),
+        scrollWheelEndless(false),
         snapsToMousePos (true),
         parentForPopupDisplay (nullptr)
     {
@@ -1018,18 +1019,42 @@
                 {
                     if (valueBox != nullptr)
                         valueBox->hideEditor (false);
-
+                    
+                    /////////////////////
+                    // modified by Matthias Kronlachner
                     const double value = (double) currentValue.getValue();
-                    const double delta = getMouseWheelDelta (value, (std::abs (wheel.deltaX) > std::abs (wheel.deltaY)
-                                                                        ? -wheel.deltaX : wheel.deltaY)
-                                                                      * (wheel.isReversed ? -1.0f : 1.0f));
-                    if (delta != 0)
+                    
+                    double newValue = value;
+                    
+                    if (!scrollWheelEndless)
                     {
-                        const double newValue = value + jmax (interval, std::abs (delta)) * (delta < 0 ? -1.0 : 1.0);
-
-                        DragInProgress drag (*this);
-                        setValue (owner.snapValue (newValue, notDragging), sendNotificationSync);
+                        const double delta = getMouseWheelDelta (value, (std::abs (wheel.deltaX) > std::abs (wheel.deltaY)
+                                                                         ? -wheel.deltaX : wheel.deltaY)
+                                                                 * (wheel.isReversed ? -1.0f : 1.0f));
+                        if (delta != 0)
+                        {
+                            newValue = value + jmax (interval, std::abs (delta)) * (delta < 0 ? -1.0 : 1.0);
+                        }
+                    } else {
+                        const double currentPos = owner.valueToProportionOfLength (value);
+                        const double proportionDelta = (wheel.deltaX != 0 ? -wheel.deltaX : wheel.deltaY) * (wheel.isReversed ? -0.15f : 0.15f);
+                        
+                        // behavior to wrap slider around with wheel
+                        double changeValue = currentPos + proportionDelta;
+                        if (changeValue > 1.f)
+                            changeValue -= 1.f;
+                        
+                        if (changeValue < 0.f)
+                            changeValue += 1.0;
+                        
+                        newValue = owner.proportionOfLengthToValue (jlimit (0.0, 1.0, changeValue));
                     }
+                    
+                    ////////////////////
+                    
+                    DragInProgress drag (*this);
+                    setValue (owner.snapValue (newValue, notDragging), sendNotificationSync);
+                    
                 }
             }
 
@@ -1221,6 +1246,7 @@
     bool useDragEvents;
     bool incDecDragged;
     bool scrollWheelEnabled;
+    bool scrollWheelEndless;
     bool snapsToMousePos;
 
     ScopedPointer<Label> valueBox;
@@ -1522,6 +1548,7 @@
 //==============================================================================
 void Slider::setPopupMenuEnabled (const bool menuEnabled)   { pimpl->menuEnabled = menuEnabled; }
 void Slider::setScrollWheelEnabled (const bool enabled)     { pimpl->scrollWheelEnabled = enabled; }
+void Slider::setScrollWheelEndless (const bool enabled)     { pimpl->scrollWheelEndless = enabled; }
 
 bool Slider::isHorizontal() const noexcept                  { return pimpl->isHorizontal(); }
 bool Slider::isVertical() const noexcept                    { return pimpl->isVertical(); }
